#include <stdio.h>
#include <stdlib.h>


int main(int argc, char** argv) {
	
	int massiv[5]={5,4,10,4,5}; //массив размером 5 = числа массива
	int i;//счетчик
	int j;//счетчик
	int q;
	
	for (i=0; i<5-1;i++){//отнимаем единицу, чтобы правильно попадать в элементы массива
		for (j=0;j<5-i-1;j++){
			if (massiv[j]>massiv[j+1]){
				
				q=massiv[j];
				massiv[j]=massiv[j+1];
				massiv[j+1]=q;
				
			}
		}
	}
	
	for (i=0;i<5;i++){
		printf("%d ", massiv[i]);
	}
	
	return 0;
}



В общем виде алгоритм пузырьковой сортировки выглядит так:

Берём самый первый элемент массива и сравниваем его со вторым. 
Если первый больше второго — меняем их местами с первым, если нет — ничего не делаем.
Затем берём второй элемент массива и сравниваем его со следующим — третьим. Если второй больше третьего — меняем их местами, если нет — ничего не делаем.
Проходим так до предпоследнего элемента, сравниваем его с последним и ставим наибольший из них в конец массива. Всё, мы нашли самое большое число в массиве и поставили его на своё место.
Возвращаемся в начало алгоритма и делаем всё снова точно так же, начиная с первого и второго элемента. Только теперь даём себе задание не проверять последний элемент — мы знаем, что теперь в конце массива самый большой элемент.
Когда закончим очередной проход — уменьшаем значение финальной позиции, до которой проверяем, и снова начинаем сначала.
Так делаем до тех пор, пока у нас не останется один элемент.
